For Yarn-
yarn global add live-server

To see live server version-
live-server -v

To open live server page-
live-server public

Yarn init- same as npm install but for yarn
 //-----------------------------------------------------------------------------------------------------------------

NPM install React
yarn add react react-dom 

 //-----------------------------------------------------------------------------------------------------------

React Script Tags-
    <script src="http://unpkg.com/react@16.0.0/umd/react.development.js"></script>
    <script src="http://unpkg.com/react@16.0.0/umd/react-dom.development.js"></script>
    
 //-----------------------------------------------------------------------------------------------------------------   
 
Babel NPM install- 
npm install -g babel-cli@6.24.1
-or- 
yarn global add babel-cli
yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

Specifying path for babel- (adding --watch will log changes)
babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch 

 //------------------------------------------------------------------------------------
 
 React Cheat Sheet:
 ? (checks to see if a condition is true or false)
 && (logical && operator: if both are true or false || If true will show the second value, if false, false will be used) 
 True, False, Null (ignored by JSX)

//------------------------------------------------------------------------------------

Let & Cont
 
Function Scoped & Block Level Scoped (scoped to blocks like if statements or loops)
Let: reassign a variable
Const: default for a variable

//---------------------------

Arrow Functions

All arrow functions are anon you have to assign them to a variable;
=> : revised function (
     const square = (x) => {
       return x * x;
       };
   console.log(square(9) // output 81
   
 Arrow Function Expression Syntax: implicintely returned
   const squareArrow = (x) => x * x;
   
arguements are no longer bound with arrow functions

//---------------------------

 const user = {
    name: "Steph",
    cities: ["Philly", "CLE", "London"],
    printPlacesLived() {
        this.cities.forEach((city) => {
            console.log(this.name + "  I've lived in " + city)
        })
    }
};

user.printPlacesLived();

//---------------------------
   

React has the concept of a virtual dom, serves as an intermediary dom server to minimize to amount of changes pushed to the browser for performance. 
React does not support Ajax. 
Common.js is a module loader. 

All code inserted in react should be populated in to your root containder (example) <div class = "root">
Webpack- gives all files a name of bundle.js (combines all files in to one file);

You can only have one single node per component for react files (example, one file for a nav bar, one for jumbotron)

### Create your React Element
Const title = React.createElement (
'H1' //tag to be created
{Id:'title', className: 'header'}, // add attributes
)

### Render to the DOM
ReactDOM.render(
  title, 
  document.getElementById ("react-container")
  )
 
//you can also remove render and create element by declaring them globally.
Const {createElement} = React
Const {render} = ReactDOM

### add a css style
Const style = {
  Color: "white",
  FontFamily:"arial"
  }
  
  Const title = createElement (
    "Hi"
    {Id:"title", className: "header", style:style},
    )

### JSX 
JSX helps simplif it down further (native / built in)
render (
 <h1 id = 'title'
  className = 'header'
  style = {style}>
  Hello world
  </h1>
  document.getElementById('react-container)
  )

### Babel note:
 //in your index.html file. Include <script type="text/babel" src="index.js"></script> for the transpillar to run.
 
 *check out httpster it's an npm package that sets up a mini server.
 
 ### Bundling:
 Change script tag to java script and src to bundle.js
 Create a package.json in npm
 Install babel, react
 Manipulate folder structure
 Dist- index.html, bundle.js //everything for the browser
 Src- index.js //everything for react
 
 Create babel.rc file //this is for all the presets that will be translated through babel
   {
   'presets' : [ 'latest', 'react', 'stage-0']
   }
   
   Then install with npm install: 
     Npm install babel-presets-react@(current version here) --save-dev
     Same for latest and stage zero.
     
     After npm install save the files to the bundle.js
     Babel ./src/index.js --out file .dist/bundle.js
  
  Optional: you can go in to the package json file and add "start": "httpster -d .dist -p 3000 // to auto start server if you use httpster
    
 
